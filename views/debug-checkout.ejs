<%- include('partials/header') %>

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">
                        <i class="fas fa-bug me-2"></i>Checkout Debug Page
                    </h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Session Storage Data</h5>
                            <pre id="sessionStorageData" class="bg-light p-3 rounded"></pre>
                        </div>
                        <div class="col-md-6">
                            <h5>Test Order Creation</h5>
                            <div class="mb-3">
                                <button class="btn btn-primary" onclick="testOrderCreation()">
                                    <i class="fas fa-play me-1"></i>Test Order Creation
                                </button>
                            </div>
                            <div id="testResults" class="bg-light p-3 rounded" style="min-height: 200px;">
                                <p class="text-muted">Click "Test Order Creation" to see results</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mt-4">
                        <div class="col-12">
                            <h5>Create Test Checkout Order</h5>
                            <div class="row">
                                <div class="col-md-3">
                                    <label class="form-label">Event ID</label>
                                    <input type="text" class="form-control" id="testEventId" placeholder="Event ID">
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Event Type</label>
                                    <select class="form-select" id="testEventType">
                                        <option value="Movie">Movie</option>
                                        <option value="StagePlays">Stage Plays</option>
                                        <option value="LiveOrchestra">Live Orchestra</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Show Date</label>
                                    <input type="datetime-local" class="form-control" id="testShowDate">
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Seat Count</label>
                                    <input type="number" class="form-control" id="testSeatCount" value="2" min="1" max="10">
                                </div>
                            </div>
                            <div class="mt-3">
                                <button class="btn btn-success" onclick="createTestCheckoutOrder()">
                                    <i class="fas fa-plus me-1"></i>Create Test Checkout Order
                                </button>
                                <button class="btn btn-info" onclick="goToCheckout()">
                                    <i class="fas fa-arrow-right me-1"></i>Go to Checkout
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Set default show date to 7 days from now
    const defaultDate = new Date();
    defaultDate.setDate(defaultDate.getDate() + 7);
    document.getElementById('testShowDate').value = defaultDate.toISOString().slice(0, 16);
    
    // Display current session storage data
    displaySessionStorageData();
});

function displaySessionStorageData() {
    const sessionStorageData = document.getElementById('sessionStorageData');
    const data = {};
    
    // Get all session storage keys
    for (let i = 0; i < sessionStorage.length; i++) {
        const key = sessionStorage.key(i);
        try {
            data[key] = JSON.parse(sessionStorage.getItem(key));
        } catch (e) {
            data[key] = sessionStorage.getItem(key);
        }
    }
    
    sessionStorageData.textContent = JSON.stringify(data, null, 2);
}

async function testOrderCreation() {
    const resultsDiv = document.getElementById('testResults');
    resultsDiv.innerHTML = '<div class="spinner-border text-primary" role="status"></div> Testing...';
    
    try {
        // Get test data from form
        const eventId = document.getElementById('testEventId').value || '68efd1f5e6cf58be816ef44c';
        const eventType = document.getElementById('testEventType').value;
        const showDate = document.getElementById('testShowDate').value;
        const seatCount = parseInt(document.getElementById('testSeatCount').value);
        
        // Create test order data
        const orderData = {
            eventId: eventId,
            eventType: eventType,
            showDate: new Date(showDate).toISOString(),
            selectedSeats: Array.from({length: seatCount}, (_, i) => ({
                seatNumber: `A${i + 1}`,
                seatType: 'standard',
                price: 250
            })),
            customerInfo: {
                name: 'Test Customer',
                email: 'test@example.com',
                phone: '0123456789',
                address: '123 Test Street',
                city: 'Bangkok'
            }
        };
        
        // Test order creation
        const response = await fetch('/api/payments/create-order', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(orderData)
        });
        
        const result = await response.json();
        
        if (response.ok && result.success) {
            resultsDiv.innerHTML = `
                <div class="alert alert-success">
                    <h6>✅ Order Creation Successful!</h6>
                    <p><strong>Order ID:</strong> ${result.order.id}</p>
                    <p><strong>Order Number:</strong> ${result.order.orderNumber}</p>
                    <p><strong>Total:</strong> ${result.order.formattedTotal}</p>
                    <p><strong>Expires:</strong> ${new Date(result.order.expiresAt).toLocaleString()}</p>
                </div>
            `;
        } else {
            resultsDiv.innerHTML = `
                <div class="alert alert-danger">
                    <h6>❌ Order Creation Failed</h6>
                    <p><strong>Status:</strong> ${response.status}</p>
                    <p><strong>Error:</strong> ${result.message || 'Unknown error'}</p>
                </div>
            `;
        }
    } catch (error) {
        resultsDiv.innerHTML = `
            <div class="alert alert-danger">
                <h6>❌ Test Failed</h6>
                <p><strong>Error:</strong> ${error.message}</p>
            </div>
        `;
    }
}

function createTestCheckoutOrder() {
    const eventId = document.getElementById('testEventId').value || '68efd1f5e6cf58be816ef44c';
    const eventType = document.getElementById('testEventType').value;
    const showDate = document.getElementById('testShowDate').value;
    const seatCount = parseInt(document.getElementById('testSeatCount').value);
    
    const checkoutOrder = {
        eventId: eventId,
        eventType: eventType,
        showDate: new Date(showDate).toISOString(),
        selectedSeats: Array.from({length: seatCount}, (_, i) => ({
            seatNumber: `A${i + 1}`,
            seatType: 'standard',
            price: 250
        }))
    };
    
    // Store in session storage
    sessionStorage.setItem('checkoutOrder', JSON.stringify(checkoutOrder));
    
    // Update display
    displaySessionStorageData();
    
    alert('Test checkout order created and stored in sessionStorage!');
}

function goToCheckout() {
    const checkoutOrder = sessionStorage.getItem('checkoutOrder');
    if (!checkoutOrder) {
        alert('Please create a test checkout order first!');
        return;
    }
    
    window.location.href = '/checkout';
}
</script>

<%- include('partials/footer') %>
