<%- include('../partials/header') %>

<!-- Hero Section with Event Background -->
<div class="event-hero position-relative" style="background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.5)), url('<%= event.poster || event.wallpaper || event.image || '/images/default-event.jpg' %>'); background-size: cover; background-position: center; min-height: 80vh;">
    <div class="container position-relative" style="z-index: 2;">
        <div class="row align-items-center min-vh-80">
            <div class="col-lg-8">
                <!-- Event Title and Details -->
                <div class="event-info text-white">
                    <h1 class="display-3 fw-bold mb-3"><%= event.name %></h1>
                    
                    <div class="event-meta mb-4">
                        <div class="d-flex flex-wrap align-items-center gap-3">
                            <span class="badge bg-<%= event.getCategoryColor ? event.getCategoryColor() : 'primary' %> fs-6">
                                <i class="<%= event.getCategoryIcon ? event.getCategoryIcon() : 'fas fa-calendar' %> me-1"></i>
                                <%= event.getCategoryDisplayName ? event.getCategoryDisplayName() : 'Event' %>
                            </span>
                            <span class="text-white-50">
                                <i class="fas fa-calendar-alt me-1"></i>
                                <%= new Date(event.date).toLocaleDateString('en-US', { 
                                    weekday: 'long',
                                    year: 'numeric', 
                                    month: 'long', 
                                    day: 'numeric' 
                                }) %>
                            </span>
                            <span class="text-white-50">
                                <i class="fas fa-clock me-1"></i>
                                <%= new Date(event.date).toLocaleTimeString('en-US', { 
                                    hour: '2-digit', 
                                    minute: '2-digit' 
                                }) %>
                            </span>
                            <span class="text-white-50">
                                <i class="fas fa-map-marker-alt me-1"></i>
                                <%= event.location.name %>
                            </span>
                        </div>
                    </div>

                    <!-- Event Description -->
                    <p class="lead mb-4"><%= event.description %></p>

                    <!-- Action Buttons -->
                    <div class="d-flex gap-3 mb-4">
                        <a href="#tickets" class="btn btn-primary btn-lg">
                            <i class="fas fa-ticket-alt me-2"></i>Buy Tickets
                        </a>
                        <button class="btn btn-outline-light btn-lg" onclick="shareEvent()">
                            <i class="fas fa-share-alt me-2"></i>Share
                        </button>
                        <% if (user) { %>
                            <button class="btn btn-outline-light btn-lg" onclick="bookmarkEvent()">
                                <i class="fas fa-bookmark me-2"></i>Save
                            </button>
                        <% } %>
                    </div>

                    <!-- Countdown Timer -->
                    <div class="countdown-timer mb-4" data-event-date="<%= event.date %>">
                        <div class="countdown-card bg-dark bg-opacity-75 rounded-4 p-4 border border-light border-opacity-25">
                            <h4 class="text-center text-white mb-3">
                                <i class="fas fa-clock me-2 text-warning"></i>
                                Event Starts In
                            </h4>
                            <div class="countdown-display d-flex justify-content-center gap-3 flex-wrap">
                                <div class="countdown-item text-center">
                                    <div class="countdown-number bg-primary text-white rounded-3 p-3 mb-2" id="days">
                                        <span class="h2 fw-bold mb-0">00</span>
                                    </div>
                                    <div class="countdown-label text-white-50 small">DAYS</div>
                                </div>
                                <div class="countdown-item text-center">
                                    <div class="countdown-number bg-success text-white rounded-3 p-3 mb-2" id="hours">
                                        <span class="h2 fw-bold mb-0">00</span>
                                    </div>
                                    <div class="countdown-label text-white-50 small">HOURS</div>
                                </div>
                                <div class="countdown-item text-center">
                                    <div class="countdown-number bg-warning text-dark rounded-3 p-3 mb-2" id="minutes">
                                        <span class="h2 fw-bold mb-0">00</span>
                                    </div>
                                    <div class="countdown-label text-white-50 small">MINUTES</div>
                                </div>
                                <div class="countdown-item text-center">
                                    <div class="countdown-number bg-danger text-white rounded-3 p-3 mb-2" id="seconds">
                                        <span class="h2 fw-bold mb-0">00</span>
                                    </div>
                                    <div class="countdown-label text-white-50 small">SECONDS</div>
                                </div>
                            </div>
                            <div class="text-center mt-3">
                                <small class="text-white-50">
                                    <i class="fas fa-calendar-check me-1"></i>
                                    Event Date: <span id="event-date-display"></span>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Event Details Section -->
<div class="container my-5">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Event Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h3 class="mb-0">
                        <i class="fas fa-info-circle me-2"></i>Event Information
                    </h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Date & Time</h5>
                            <p class="text-muted">
                                <i class="fas fa-calendar me-2"></i>
                                <%= new Date(event.date).toLocaleDateString('en-US', { 
                                    weekday: 'long',
                                    year: 'numeric', 
                                    month: 'long', 
                                    day: 'numeric' 
                                }) %>
                            </p>
                            <p class="text-muted">
                                <i class="fas fa-clock me-2"></i>
                                <%= new Date(event.date).toLocaleTimeString('en-US', { 
                                    hour: '2-digit', 
                                    minute: '2-digit' 
                                }) %>
                            </p>
                        </div>
                        <div class="col-md-6">
                            <h5>Location</h5>
                            <p class="text-muted">
                                <i class="fas fa-map-marker-alt me-2"></i>
                                <%= event.location.name %>
                            </p>
                            <p class="text-muted">
                                <i class="fas fa-location-arrow me-2"></i>
                                <%= event.location.address %>
                            </p>
                            <p class="text-muted">
                                <i class="fas fa-users me-2"></i>
                                Capacity: <%= event.location.capacity %> seats
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Category-Specific Details -->
            <% if (category === 'movies') { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-film me-2"></i>Movie Details
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Director:</strong> <%= event.movieDetails.director %></p>
                                <p><strong>Duration:</strong> <%= event.movieDetails.duration %> minutes</p>
                                <p><strong>Rating:</strong> <span class="badge bg-warning"><%= event.movieDetails.rating %></span></p>
                                <p><strong>Language:</strong> <%= event.movieDetails.language %></p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Genre:</strong> <%= event.movieDetails.genre.join(', ') %></p>
                                <p><strong>Release Year:</strong> <%= event.movieDetails.releaseYear %></p>
                                <% if (event.movieDetails.imdbRating) { %>
                                    <p><strong>IMDB Rating:</strong> ⭐ <%= event.movieDetails.imdbRating %></p>
                                <% } %>
                            </div>
                        </div>
                        <h5 class="mt-3">Cast</h5>
                        <p><%= event.movieDetails.cast.join(', ') %></p>
                    </div>
                </div>
            <% } else if (category === 'stage-plays') { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-theater-masks me-2"></i>Stage Play Details
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Playwright:</strong> <%= event.stagePlayDetails.playwright %></p>
                                <p><strong>Duration:</strong> <%= event.stagePlayDetails.duration %> minutes</p>
                                <p><strong>Age Restriction:</strong> <%= event.stagePlayDetails.ageRestriction %></p>
                                <p><strong>Language:</strong> <%= event.stagePlayDetails.language %></p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Genre:</strong> <%= event.stagePlayDetails.genre.join(', ') %></p>
                                <p><strong>Intermission:</strong> <%= event.stagePlayDetails.intermission ? 'Yes' : 'No' %></p>
                                <% if (event.stagePlayDetails.intermission) { %>
                                    <p><strong>Intermission Duration:</strong> <%= event.stagePlayDetails.intermissionDuration %> minutes</p>
                                <% } %>
                            </div>
                        </div>
                        <h5 class="mt-3">Cast</h5>
                        <div class="row">
                            <% event.stagePlayDetails.cast.forEach(castMember => { %>
                                <div class="col-md-6 mb-2">
                                    <strong><%= castMember.name %></strong> - <%= castMember.role %>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
            <% } else if (category === 'orchestra') { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-music me-2"></i>Orchestra Details
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>Conductor:</strong> <%= event.orchestraDetails.conductor %></p>
                                <p><strong>Orchestra:</strong> <%= event.orchestraDetails.orchestra %></p>
                                <p><strong>Duration:</strong> <%= event.orchestraDetails.duration %> minutes</p>
                                <p><strong>Dress Code:</strong> <%= event.orchestraDetails.dressCode %></p>
                            </div>
                            <div class="col-md-6">
                                <p><strong>Season:</strong> <%= event.orchestraDetails.season %></p>
                                <p><strong>Intermission:</strong> <%= event.orchestraDetails.intermission ? 'Yes' : 'No' %></p>
                                <% if (event.orchestraDetails.intermission) { %>
                                    <p><strong>Intermission Duration:</strong> <%= event.orchestraDetails.intermissionDuration %> minutes</p>
                                <% } %>
                            </div>
                        </div>
                        <h5 class="mt-3">Program</h5>
                        <p><%= event.orchestraDetails.program %></p>
                        <h5 class="mt-3">Repertoire</h5>
                        <% event.orchestraDetails.repertoire.forEach(piece => { %>
                            <div class="mb-2">
                                <strong><%= piece.composer %></strong> - <%= piece.piece %>
                                <% if (piece.movement) { %>
                                    <br><small class="text-muted"><%= piece.movement %></small>
                                <% } %>
                            </div>
                        <% }) %>
                    </div>
                </div>
            <% } %>

            <!-- Showtimes/Performances -->
            <% if (event.showtimes || event.performances) { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-clock me-2"></i>
                            <% if (category === 'movies') { %>Showtimes<% } else { %>Performances<% } %>
                        </h3>
                    </div>
                    <div class="card-body">
                        <% if (event.showtimes) { %>
                            <div class="row">
                                <% event.showtimes.forEach(showtime => { %>
                                    <div class="col-md-4 mb-3">
                                        <div class="card border-primary">
                                            <div class="card-body text-center">
                                                <h5><%= showtime.time %></h5>
                                                <p class="text-muted">
                                                    <%= showtime.availableSeats %> / <%= showtime.totalSeats %> seats available
                                                </p>
                                                <% if (showtime.availableSeats > 0) { %>
                                                    <button class="btn btn-primary btn-sm">Select</button>
                                                <% } else { %>
                                                    <button class="btn btn-secondary btn-sm" disabled>Sold Out</button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                        <% } else if (event.performances) { %>
                            <div class="row">
                                <% event.performances.forEach(performance => { %>
                                    <div class="col-md-6 mb-3">
                                        <div class="card border-primary">
                                            <div class="card-body">
                                                <h5>
                                                    <%= new Date(performance.date).toLocaleDateString('en-US', { 
                                                        month: 'short', 
                                                        day: 'numeric' 
                                                    }) %>
                                                    at <%= performance.time %>
                                                </h5>
                                                <p class="text-muted">
                                                    <%= performance.availableSeats %> / <%= performance.totalSeats %> seats available
                                                </p>
                                                <% if (performance.availableSeats > 0) { %>
                                                    <button class="btn btn-primary btn-sm">Select</button>
                                                <% } else { %>
                                                    <button class="btn btn-secondary btn-sm" disabled>Sold Out</button>
                                                <% } %>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% } %>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Ticket Pricing -->
            <div class="card mb-4" id="tickets">
                <div class="card-header">
                    <h3 class="mb-0">
                        <i class="fas fa-ticket-alt me-2"></i>Ticket Pricing
                    </h3>
                </div>
                <div class="card-body">
                    <div class="pricing-item mb-3">
                        <div class="d-flex justify-content-between">
                            <span>Regular</span>
                            <strong>$<%= event.pricing.basePrice %></strong>
                        </div>
                    </div>
                    <% if (event.pricing.vipPrice) { %>
                        <div class="pricing-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span>VIP</span>
                                <strong>$<%= event.pricing.vipPrice %></strong>
                            </div>
                        </div>
                    <% } %>
                    <% if (event.pricing.studentPrice) { %>
                        <div class="pricing-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span>Student</span>
                                <strong>$<%= event.pricing.studentPrice %></strong>
                            </div>
                        </div>
                    <% } %>
                    <% if (event.pricing.seniorPrice) { %>
                        <div class="pricing-item mb-3">
                            <div class="d-flex justify-content-between">
                                <span>Senior</span>
                                <strong>$<%= event.pricing.seniorPrice %></strong>
                            </div>
                        </div>
                    <% } %>
                    <hr>
                    <a href="#seat-selection" class="btn btn-primary w-100" onclick="scrollToSeatSelection()">
                        <i class="fas fa-shopping-cart me-2"></i>Select Seats
                    </a>
                </div>
            </div>

            <!-- Organizer Info -->
            <div class="card mb-4">
                <div class="card-header">
                    <h3 class="mb-0">
                        <i class="fas fa-building me-2"></i>Organizer
                    </h3>
                </div>
                <div class="card-body">
                    <h5><%= event.organizer.name %></h5>
                    <% if (event.organizer.organizerProfile) { %>
                        <p class="text-muted"><%= event.organizer.organizerProfile.companyName %></p>
                        <% if (event.organizer.organizerProfile.description) { %>
                            <p><%= event.organizer.organizerProfile.description %></p>
                        <% } %>
                    <% } %>
                </div>
            </div>

            <!-- Related Events -->
            <% if (relatedEvents.length > 0) { %>
                <div class="card">
                    <div class="card-header">
                        <h3 class="mb-0">
                            <i class="fas fa-star me-2"></i>Related Events
                        </h3>
                    </div>
                    <div class="card-body">
                        <% relatedEvents.forEach(relatedEvent => { %>
                            <div class="d-flex mb-3">
                                <img src="<%= relatedEvent.image || '/images/default-event.jpg' %>" 
                                     class="rounded me-3" 
                                     style="width: 60px; height: 60px; object-fit: cover;" 
                                     alt="<%= relatedEvent.name %>">
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">
                                        <a href="/events/<%= relatedEvent._id %>" class="text-decoration-none">
                                            <%= relatedEvent.name %>
                                        </a>
                                    </h6>
                                    <small class="text-muted">
                                        <%= new Date(relatedEvent.date).toLocaleDateString('en-US', { 
                                            month: 'short', 
                                            day: 'numeric' 
                                        }) %>
                                    </small>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Seat Selection Section -->
<section id="seat-selection" class="py-5 bg-light">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h2 class="text-center mb-5">
                    <i class="fas fa-chair me-2"></i>Select Your Seats
                </h2>
                
                <!-- Show Date Selection -->
                <div class="row mb-4">
                    <div class="col-md-6 mx-auto">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <i class="fas fa-calendar-alt me-2"></i>Select Show Date
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="row" id="show-dates-container">
                                    <!-- Show dates will be loaded here -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Seating Chart -->
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="fas fa-theater-masks me-2"></i>Seating Chart
                                </h5>
                                <div class="seat-legend">
                                    <span class="legend-item">
                                        <span class="seat-legend-available"></span> Available
                                    </span>
                                    <span class="legend-item">
                                        <span class="seat-legend-selected"></span> Selected
                                    </span>
                                    <span class="legend-item">
                                        <span class="seat-legend-taken"></span> Taken
                                    </span>
                                </div>
                            </div>
                            <div class="card-body">
                                <!-- Stage indicator now added inside seating container -->
                                
                                <!-- Seating Layout -->
                                <div class="seating-container" id="seating-container">
                                    <!-- Seats will be generated here -->
                                </div>
                                
                                <!-- Selected Seats Summary -->
                                <div class="selected-seats-summary mt-4" id="selected-seats-summary" style="display: none;">
                                    <div class="card bg-primary text-white">
                                        <div class="card-body">
                                            <h6 class="card-title">
                                                <i class="fas fa-ticket-alt me-2"></i>Selected Seats
                                            </h6>
                                            <div id="selected-seats-list"></div>
                                            <div class="mt-3">
                                                <strong>Total: $<span id="total-price">0</span></strong>
                                            </div>
                                            <button class="btn btn-light btn-sm mt-2" onclick="proceedToCheckout()">
                                                <i class="fas fa-credit-card me-1"></i>Proceed to Checkout
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

    <script>
// Cache busting - force reload of updated content
console.log('Theater Layout Updated:', new Date().toISOString());

// Event data from server
const eventData = {
    id: '<%= event._id %>',
    name: '<%= event.name %>',
    showDates: <%- JSON.stringify(event.showDates || [event.date]) %>,
    seating: <%- JSON.stringify(event.seating || {totalSeats: 200, takenSeats: [], availableSeats: 200}) %>,
    pricing: <%- JSON.stringify(event.pricing) %>,
    category: '<%= category %>'
};

let selectedSeats = [];
let selectedShowDate = null;

function shareEvent() {
    if (navigator.share) {
        navigator.share({
            title: '<%= event.name %>',
            text: '<%= event.description.substring(0, 100) %>...',
            url: window.location.href
        });
    } else {
        // Fallback: copy to clipboard
        navigator.clipboard.writeText(window.location.href).then(() => {
            alert('Event link copied to clipboard!');
        });
    }
}

function scrollToSeatSelection() {
    document.getElementById('seat-selection').scrollIntoView({ 
        behavior: 'smooth' 
    });
}

// Initialize seat selection when page loads
document.addEventListener('DOMContentLoaded', function() {
    loadShowDates();
    loadSeatingChart();
});

function loadShowDates() {
    const container = document.getElementById('show-dates-container');
    container.innerHTML = '';
    
    eventData.showDates.forEach((dateObj, index) => {
        // Handle both object format {date: Date} and direct Date format
        const dateValue = dateObj.date || dateObj;
        const showDate = new Date(dateValue);
        
        // Validate date
        if (isNaN(showDate.getTime())) {
            console.error('Invalid date:', dateValue);
            return;
        }
        
        const dateCard = document.createElement('div');
        dateCard.className = 'col-md-4 mb-2';
        dateCard.innerHTML = `
            <div class="card show-date-card" onclick="selectShowDate('${dateValue}', ${index})">
                <div class="card-body text-center p-2">
                    <div class="fw-bold date-text">${showDate.toLocaleDateString('en-US', { 
                        weekday: 'short', 
                        month: 'short', 
                        day: 'numeric' 
                    })}</div>
                    <small class="time-text">${showDate.toLocaleTimeString('en-US', { 
                        hour: '2-digit', 
                        minute: '2-digit',
                        hour12: true 
                    })}</small>
                </div>
            </div>
        `;
        container.appendChild(dateCard);
    });
    
    // Select first date by default
    if (eventData.showDates.length > 0) {
        const firstDate = eventData.showDates[0].date || eventData.showDates[0];
        selectShowDate(firstDate, 0);
    }
}

function selectShowDate(date, index) {
    selectedShowDate = date;
    
    // Update UI
    document.querySelectorAll('.show-date-card').forEach(card => {
        card.classList.remove('border-primary', 'bg-primary', 'text-white');
        card.classList.add('border-light');
    });
    
    const selectedCard = document.querySelectorAll('.show-date-card')[index];
    selectedCard.classList.add('border-primary', 'bg-primary', 'text-white');
    selectedCard.classList.remove('border-light');
    
    // Clear previous selections
    selectedSeats = [];
    updateSelectedSeatsSummary();
    
    // Reload seating chart for this date
    loadSeatingChart();
}

function loadSeatingChart() {
    const container = document.getElementById('seating-container');
    container.innerHTML = '';
    
    // Get seating data for the selected show date
    const selectedShowDate = document.querySelector('.show-date-card.selected');
    let totalSeats, takenSeats;
    
    if (selectedShowDate && eventData.showDates && eventData.showDates.length > 0) {
        // Use individual show seating data
        const showDateValue = selectedShowDate.dataset.date;
        const selectedShow = eventData.showDates.find(show => 
            new Date(show.date).toISOString() === new Date(showDateValue).toISOString()
        );
        
        if (selectedShow && selectedShow.seating) {
            totalSeats = selectedShow.seating.totalSeats;
            takenSeats = selectedShow.seating.takenSeats || [];
        } else {
            // Fallback to legacy seating data
            totalSeats = eventData.seating.totalSeats;
            takenSeats = eventData.seating.takenSeats || [];
        }
    } else {
        // Fallback to legacy seating data
        totalSeats = eventData.seating.totalSeats;
        takenSeats = eventData.seating.takenSeats || [];
    }
    
    // Add stage indicator inside the seating container
    const stageIndicator = document.createElement('div');
    stageIndicator.className = 'screen-stage';
    stageIndicator.innerHTML = '<i class="fas fa-tv me-2"></i>Screen / Stage';
    container.appendChild(stageIndicator);
    
    // Check event type to determine layout
    const isTheaterEvent = eventData.category === 'StagePlays' || 
                          eventData.category === 'stage-plays' ||
                          eventData.category === 'LiveOrchestra' || 
                          eventData.category === 'live-orchestra' ||
                          eventData.category === 'orchestra';
    
    if (isTheaterEvent) {
        createTheaterLayout(container, totalSeats, takenSeats);
    } else {
        createCinemaLayout(container, totalSeats, takenSeats);
    }
}

function createCinemaLayout(container, totalSeats, takenSeats) {
    // Cinema layout configuration - 18 seats per row with VIP sections
    const cinemaConfig = {
        seatsPerRow: 18, // 4 left + 5 middle-left + 5 middle-right + 4 right
        totalRows: 11, // Fixed to 11 rows (A-K)
        aisleAfterRow: 4, // Main aisle after row 4
        vipRows: [10, 11], // Rows J and K are VIP (10th and 11th rows)
        leftSectionSeats: 4,
        middleLeftSectionSeats: 5,
        middleRightSectionSeats: 5,
        rightSectionSeats: 4
    };
    
    // Create cinema seating layout
    for (let row = 1; row <= cinemaConfig.totalRows; row++) {
        const rowDiv = document.createElement('div');
        const isVipRow = cinemaConfig.vipRows.includes(row);
        rowDiv.className = isVipRow ? 'theater-row vip-row' : 'theater-row';
        
        // Row letter (A-O)
        const rowLabel = document.createElement('div');
        rowLabel.className = isVipRow ? 'row-number vip-row-number' : 'row-number';
        rowLabel.textContent = String.fromCharCode(64 + row); // Convert 1-15 to A-O
        if (isVipRow) {
            rowLabel.innerHTML = `${String.fromCharCode(64 + row)}<br><small>VIP</small>`;
        }
        rowDiv.appendChild(rowLabel);
        
        // Left section (4 seats)
        const leftSection = document.createElement('div');
        leftSection.className = 'seating-section';
        
        for (let seat = 1; seat <= cinemaConfig.leftSectionSeats; seat++) {
            const seatNumber = (row - 1) * cinemaConfig.seatsPerRow + seat;
            if (seatNumber <= totalSeats) {
                const seatElement = createSeatElement(seatNumber, takenSeats, isVipRow);
                leftSection.appendChild(seatElement);
            }
        }
        rowDiv.appendChild(leftSection);
        
        // Left aisle
        const leftAisle = document.createElement('div');
        leftAisle.className = 'center-aisle';
        rowDiv.appendChild(leftAisle);
        
        // Middle-left section (5 seats)
        const middleLeftSection = document.createElement('div');
        middleLeftSection.className = 'seating-section';
        
        for (let seat = 1; seat <= cinemaConfig.middleLeftSectionSeats; seat++) {
            const seatNumber = (row - 1) * cinemaConfig.seatsPerRow + cinemaConfig.leftSectionSeats + seat;
            if (seatNumber <= totalSeats) {
                const seatElement = createSeatElement(seatNumber, takenSeats, isVipRow);
                middleLeftSection.appendChild(seatElement);
            }
        }
        rowDiv.appendChild(middleLeftSection);
        
        // Center aisle
        const centerAisle = document.createElement('div');
        centerAisle.className = 'center-aisle';
        rowDiv.appendChild(centerAisle);
        
        // Middle-right section (5 seats)
        const middleRightSection = document.createElement('div');
        middleRightSection.className = 'seating-section';
        
        for (let seat = 1; seat <= cinemaConfig.middleRightSectionSeats; seat++) {
            const seatNumber = (row - 1) * cinemaConfig.seatsPerRow + cinemaConfig.leftSectionSeats + cinemaConfig.middleLeftSectionSeats + seat;
            if (seatNumber <= totalSeats) {
                const seatElement = createSeatElement(seatNumber, takenSeats, isVipRow);
                middleRightSection.appendChild(seatElement);
            }
        }
        rowDiv.appendChild(middleRightSection);
        
        // Right aisle
        const rightAisle = document.createElement('div');
        rightAisle.className = 'center-aisle';
        rowDiv.appendChild(rightAisle);
        
        // Right section (4 seats)
        const rightSection = document.createElement('div');
        rightSection.className = 'seating-section';
        
        for (let seat = 1; seat <= cinemaConfig.rightSectionSeats; seat++) {
            const seatNumber = (row - 1) * cinemaConfig.seatsPerRow + cinemaConfig.leftSectionSeats + cinemaConfig.middleLeftSectionSeats + cinemaConfig.middleRightSectionSeats + seat;
            if (seatNumber <= totalSeats) {
                const seatElement = createSeatElement(seatNumber, takenSeats, isVipRow);
                rightSection.appendChild(seatElement);
            }
        }
        rowDiv.appendChild(rightSection);
        
        container.appendChild(rowDiv);
        
        // Add main walkway after row 4
        if (row === cinemaConfig.aisleAfterRow) {
            const walkway = document.createElement('div');
            walkway.className = 'main-walkway';
            walkway.innerHTML = '<div class="walkway-label">Main Walkway</div>';
            container.appendChild(walkway);
        }
    }
}

function createTheaterLayout(container, totalSeats, takenSeats) {
    // Multi-level theater layout configuration
    const theaterConfig = {
        // Stage area (red)
        stage: {
            width: '80%',
            height: '60px',
            color: '#e74c3c'
        },
        // 1st Floor Seats (yellow)
        firstFloor: {
            rows: 8,
            seatsPerRow: [6, 8, 10, 12, 14, 12, 10, 8],
            section: '1st Floor'
        },
        // 2nd Floor Side Balconies (blue)
        secondFloorSides: {
            left: {
                rows: 6,
                seatsPerRow: 4,
                section: '2nd Floor Left'
            },
            right: {
                rows: 6,
                seatsPerRow: 4,
                section: '2nd Floor Right'
            }
        },
        // 2nd Floor Rear (green)
        secondFloorRear: {
            rows: 5,
            seatsPerRow: 16,
            section: '2nd Floor Rear'
        }
    };
    
            // Stage area removed - seats will be centered
    
    // Create horizontal layout container
    const horizontalLayoutDiv = document.createElement('div');
    horizontalLayoutDiv.className = 'second-floor-sides';

    // Left balcony
    const leftBalcony = createBalconySection('left', theaterConfig.secondFloorSides.left, takenSeats, '2nd-floor-left');
    horizontalLayoutDiv.appendChild(leftBalcony);

    // Main 1st floor section (moved to center)
    const firstFloorDiv = document.createElement('div');
    firstFloorDiv.className = 'first-floor-section';
    
    for (let row = 0; row < theaterConfig.firstFloor.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row first-floor-row';

        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);

        // Seats for this row
        const seatsInRow = theaterConfig.firstFloor.seatsPerRow[row];
        for (let seat = 1; seat <= seatsInRow; seat++) {
            const seatNumber = (row * 20) + seat + 100;
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, 'first-floor');
            rowDiv.appendChild(seatElement);
        }

        firstFloorDiv.appendChild(rowDiv);
    }
    horizontalLayoutDiv.appendChild(firstFloorDiv);

    // Right balcony
    const rightBalcony = createBalconySection('right', theaterConfig.secondFloorSides.right, takenSeats, '2nd-floor-right');
    horizontalLayoutDiv.appendChild(rightBalcony);

    container.appendChild(horizontalLayoutDiv);
    
    // Create 2nd Floor Rear
    const secondFloorRearDiv = document.createElement('div');
    secondFloorRearDiv.className = 'second-floor-rear';
    
    for (let row = 0; row < theaterConfig.secondFloorRear.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row second-floor-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        for (let seat = 1; seat <= theaterConfig.secondFloorRear.seatsPerRow; seat++) {
            const seatNumber = (row * 20) + seat + 500;
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, 'second-floor-rear');
            rowDiv.appendChild(seatElement);
        }
        
        secondFloorRearDiv.appendChild(rowDiv);
    }
    container.appendChild(secondFloorRearDiv);
    
    // Add legend
    const legendDiv = document.createElement('div');
    legendDiv.className = 'theater-legend';
    legendDiv.innerHTML = `
        <div class="legend-item main-floor">
            <div class="legend-color main-floor"></div>
            <span>Main Floor</span>
        </div>
        <div class="legend-item left-balcony">
            <div class="legend-color left-balcony"></div>
            <span>Left Balcony</span>
        </div>
        <div class="legend-item right-balcony">
            <div class="legend-color right-balcony"></div>
            <span>Right Balcony</span>
        </div>
        <div class="legend-item second-floor-rear">
            <div class="legend-color second-floor-rear"></div>
            <span>2nd Floor Rear</span>
        </div>
    `;
    container.appendChild(legendDiv);
}

function createBalconySection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `balcony-section ${side}-balcony`;
    
    for (let row = 0; row < config.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row balcony-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        for (let seat = 1; seat <= config.seatsPerRow; seat++) {
            const seatNumber = (row * config.seatsPerRow) + seat + (side === 'left' ? 300 : 400);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    }
    
    return sectionDiv;
}

function createSimpleCurvedSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `curved-section ${side}-section`;
    
    for (let row = 0; row < config.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row curved-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        const seatsInRow = config.seatsPerRow[row % config.seatsPerRow.length];
        for (let seat = 1; seat <= seatsInRow; seat++) {
            const seatNumber = (row * 20) + seat + (side === 'left' ? 200 : side === 'center' ? 300 : 400);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    }
    
    return sectionDiv;
}

function createSimpleRearSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `rear-section ${side}-rear`;
    
    for (let row = 0; row < config.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row rear-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        for (let seat = 1; seat <= config.seatsPerRow; seat++) {
            const seatNumber = (row * config.seatsPerRow) + seat + (side === 'left' ? 500 : 600);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    }
    
    return sectionDiv;
}

function createExactCurvedSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `curved-section ${side}-section`;
    
    config.rows.forEach((rowNum, rowIndex) => {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row curved-row';
        
        // Row number (exact from config)
        const rowNumber = document.createElement('div');
        rowNumber.className = 'row-number theater-row-number';
        rowNumber.textContent = rowNum;
        rowDiv.appendChild(rowNumber);
        
        // Seats for this row
        const seatsInRow = config.seatsPerRow[rowIndex % config.seatsPerRow.length];
        for (let seat = 1; seat <= seatsInRow; seat++) {
            const seatNumber = (rowIndex * 10) + seat + (side === 'left' ? 200 : side === 'center' ? 300 : 400);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    });
    
    return sectionDiv;
}

function createCurvedSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `curved-section ${side}-section`;
    
    for (let row = 0; row < config.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row curved-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        const seatsInRow = config.seatsPerRow[row % config.seatsPerRow.length];
        for (let seat = 1; seat <= seatsInRow; seat++) {
            const seatNumber = (row * 10) + seat + (side === 'left' ? 200 : side === 'center' ? 300 : 400);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    }
    
    return sectionDiv;
}

function createExactRearSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `rear-section ${side}-rear`;
    
    config.rows.forEach((rowNum, rowIndex) => {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row rear-row';
        
        // Row number (exact from config)
        const rowNumber = document.createElement('div');
        rowNumber.className = 'row-number theater-row-number';
        rowNumber.textContent = rowNum;
        rowDiv.appendChild(rowNumber);
        
        // Seats for this row
        for (let seat = 1; seat <= config.seatsPerRow; seat++) {
            const seatNumber = (rowIndex * config.seatsPerRow) + seat + (side === 'left' ? 500 : 600);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    });
    
    return sectionDiv;
}

function createRearSection(side, config, takenSeats, sectionType) {
    const sectionDiv = document.createElement('div');
    sectionDiv.className = `rear-section ${side}-rear`;
    
    for (let row = 0; row < config.rows; row++) {
        const rowDiv = document.createElement('div');
        rowDiv.className = 'theater-row rear-row';
        
        // Row letter
        const rowLetter = document.createElement('div');
        rowLetter.className = 'row-number theater-row-number';
        rowLetter.textContent = String.fromCharCode(65 + row); // A, B, C, D, etc.
        rowDiv.appendChild(rowLetter);
        
        // Seats for this row
        for (let seat = 1; seat <= config.seatsPerRow; seat++) {
            const seatNumber = (row * config.seatsPerRow) + seat + (side === 'left' ? 500 : 600);
            const seatElement = createTheaterSeatElement(seatNumber, takenSeats, sectionType);
            rowDiv.appendChild(seatElement);
        }
        
        sectionDiv.appendChild(rowDiv);
    }
    
    return sectionDiv;
}

function createTheaterSeatElement(seatNumber, takenSeats, sectionType) {
    const seatElement = document.createElement('div');
    seatElement.className = `theater-seat ${sectionType}-seat`;
    seatElement.dataset.seatNumber = seatNumber;
    
    if (takenSeats.includes(seatNumber)) {
        seatElement.classList.add('taken');
    } else {
        seatElement.classList.add('available');
        seatElement.onclick = () => toggleSeat(seatNumber);
    }
    
    return seatElement;
}

function createSeatElement(seatNumber, takenSeats, isVip = false) {
    const seatElement = document.createElement('div');
    seatElement.className = isVip ? 'theater-seat vip-seat' : 'theater-seat';
    seatElement.dataset.seatNumber = seatNumber;
    
    if (takenSeats.includes(seatNumber)) {
        seatElement.classList.add('taken');
    } else {
        seatElement.classList.add('available');
        seatElement.onclick = () => toggleSeat(seatNumber);
    }
    
    return seatElement;
}

function toggleSeat(seatNumber) {
    const seatElement = document.querySelector(`[data-seat-number="${seatNumber}"]`);
    
    if (selectedSeats.includes(seatNumber)) {
        // Deselect seat
        selectedSeats = selectedSeats.filter(seat => seat !== seatNumber);
        seatElement.classList.remove('selected');
        seatElement.classList.add('available');
    } else {
        // Select seat
        selectedSeats.push(seatNumber);
        seatElement.classList.remove('available');
        seatElement.classList.add('selected');
    }
    
    updateSelectedSeatsSummary();
}

function updateSelectedSeatsSummary() {
    const summary = document.getElementById('selected-seats-summary');
    const seatsList = document.getElementById('selected-seats-list');
    const totalPrice = document.getElementById('total-price');
    
    if (selectedSeats.length === 0) {
        summary.style.display = 'none';
        return;
    }
    
    summary.style.display = 'block';
    
    // Update seats list
    seatsList.innerHTML = selectedSeats.map(seat => 
        `<span class="badge bg-light text-dark me-1 mb-1">Seat ${seat}</span>`
    ).join('');
    
    // Calculate total price
    const basePrice = eventData.pricing.basePrice;
    const total = selectedSeats.length * basePrice;
    totalPrice.textContent = total.toFixed(2);
}

function proceedToCheckout() {
    if (selectedSeats.length === 0) {
        alert('Please select at least one seat.');
        return;
    }
    
    if (!selectedShowDate) {
        alert('Please select a show date.');
        return;
    }
    
    // For now, just show an alert with the selection
    // Later this will redirect to a checkout page
    const showDate = new Date(selectedShowDate);
    alert(`Selected ${selectedSeats.length} seat(s) for ${showDate.toLocaleDateString()} at ${showDate.toLocaleTimeString()}\nTotal: $${(selectedSeats.length * eventData.pricing.basePrice).toFixed(2)}\n\nCheckout system will be implemented later.`);
}

function bookmarkEvent() {
    // TODO: Implement bookmark functionality
    alert('Bookmark functionality coming soon!');
}

// Countdown Timer Functionality
function initializeCountdownTimer() {
    const countdownTimer = document.querySelector('.countdown-timer');
    if (!countdownTimer) return;
    
    const eventDate = new Date(countdownTimer.dataset.eventDate);
    const eventDateDisplay = document.getElementById('event-date-display');
    
    // Display event date
    if (eventDateDisplay) {
        eventDateDisplay.textContent = eventDate.toLocaleDateString('en-US', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    }
    
    function updateCountdown() {
        const now = new Date().getTime();
        const distance = eventDate.getTime() - now;
        
        if (distance < 0) {
            // Event has passed
            document.getElementById('days').innerHTML = '<span class="h2 fw-bold mb-0">00</span>';
            document.getElementById('hours').innerHTML = '<span class="h2 fw-bold mb-0">00</span>';
            document.getElementById('minutes').innerHTML = '<span class="h2 fw-bold mb-0">00</span>';
            document.getElementById('seconds').innerHTML = '<span class="h2 fw-bold mb-0">00</span>';
            
            // Update the title to show event has started
            const titleElement = countdownTimer.querySelector('h4');
            if (titleElement) {
                titleElement.innerHTML = '<i class="fas fa-play me-2 text-success"></i>Event Has Started!';
            }
            return;
        }
        
        // Calculate time units
        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);
        
        // Update the countdown display
        document.getElementById('days').innerHTML = `<span class="h2 fw-bold mb-0">${days.toString().padStart(2, '0')}</span>`;
        document.getElementById('hours').innerHTML = `<span class="h2 fw-bold mb-0">${hours.toString().padStart(2, '0')}</span>`;
        document.getElementById('minutes').innerHTML = `<span class="h2 fw-bold mb-0">${minutes.toString().padStart(2, '0')}</span>`;
        document.getElementById('seconds').innerHTML = `<span class="h2 fw-bold mb-0">${seconds.toString().padStart(2, '0')}</span>`;
        
        // Add pulse animation to seconds when it's the last minute
        const secondsElement = document.getElementById('seconds');
        if (days === 0 && hours === 0 && minutes === 0) {
            secondsElement.style.animation = 'pulse 1s infinite';
        } else {
            secondsElement.style.animation = 'none';
        }
    }
    
    // Update countdown immediately
    updateCountdown();
    
    // Update countdown every second
    const countdownInterval = setInterval(updateCountdown, 1000);
    
    // Store interval ID for cleanup if needed
    countdownTimer.countdownInterval = countdownInterval;
}

// Initialize countdown timer when page loads
document.addEventListener('DOMContentLoaded', function() {
    initializeCountdownTimer();
});
</script>

<%- include('../partials/footer') %>
